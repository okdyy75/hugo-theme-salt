name: Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup npm
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
  
      - name: npm Install
        run: |
          npm ci
  
      - name: Build
        run: |
          echo 'hugo-theme-salt.okdyy75.com' > static/CNAME
          mv exampleContent content
          mv config.org.yml config.yml
          sed -ie "s|my_name|okdyy75|" config.yml
          sed -ie "s|my_email@example.com|okdyy75@gmail.com|" config.yml
          sed -ie "s|https://example.com/my_url|https://github.com/okdyy75|" config.yml
          sed -ie "s|name: ユーザー名|name: okdyy75|" config.yml
          sed -ie "s|description: プロフィール|description: Hugo用ブログテーマ「Salt」を作りました|" config.yml
          sed -ie "s|twitter: twitter|twitter: okdyy75|" config.yml
          sed -ie "s|github: github|github: okdyy75|" config.yml
          sed -ie "s|qiita: qiita|qiita: okdyy75|" config.yml
          sed -ie "s|zenn: zenn|zenn: okdyy75|" config.yml
          sed -ie "s|name: my_organization|name: okdyy75|" config.yml
          sed -ie "s|url: https://example.com/publisher|url: https://github.com/okdyy75|" config.yml
          sed -ie "s|description: organization_description|description: Hugo用ブログテーマ「Salt」を作りました|" config.yml
          sed -ie "s|https://example.com/sameAs|https://x.com/okdyy75|" config.yml
          sed -ie "s|twitterTimeline: twitter|twitterTimeline:|" config.yml
          echo '<script>let isLoaded = false; window.addEventListener( "scroll", function () { if (isLoaded) { return; } if (document.documentElement.scrollTop != 0 || document.body.scrollTop != 0) { (function () { const GoogleAdSenseId = "ca-pub-9459277760652211"; let e = document.createElement("script"); e.type = "text/javascript"; e.crossorigin = "anonymous"; e.async = true; e.src = "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=" + GoogleAdSenseId; document.body.appendChild(e); e.onload = function(){ document.querySelector("header .google-auto-placed").remove(); } })(); (function () { const GoogleAnalyticsId = "G-LR5GBHW5M5"; let e = document.createElement("script"); e.type = "text/javascript"; e.async = true; e.src = "https://www.googletagmanager.com/gtag/js?id=" + GoogleAnalyticsId; document.body.appendChild(e); window.dataLayer = window.dataLayer || []; function gtag() { dataLayer.push(arguments); } gtag("js", new Date()); gtag("config", GoogleAnalyticsId); })(); isLoaded = true; } }, true );</script>' >> ./layouts/partials/body-add.html
          npm run build
  
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: Get next version
        id: version
        run: |
          latest_tag=$(git tag -l 'v*' | sort -V | tail -1)
          echo "Latest tag: $latest_tag"

          # v1.2.3 形式に対応
          next_tag=$(echo "$latest_tag" | awk -F'.' '{print $1"."$2"."$3+1}')
          echo "Next tag: $next_tag"

          # 下書きリリース取得
          draft_tag=$(gh release list | awk -F'\\t' '$2=="Draft" {print $3}' | head -n 1)
          echo "Draft tag: $draft_tag"

          # 下書きリリースが既に存在していれば削除して再作成（リリースノート自動生成のため）
          if [ "$draft_tag" != "" ]; then
            gh release delete $draft_tag -y
          fi

          echo "next_tag=$next_tag" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create draft release
        run: |
          gh release create ${{ steps.version.outputs.next_tag }} \
            --draft \
            --generate-notes \
            --title "${{ steps.version.outputs.next_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
