<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>トップページ on Hugoブログテーマ「Salt」</title><link>https://hugo-theme-salt.okdyy75.com/</link><description>Recent content in トップページ on Hugoブログテーマ「Salt」</description><generator>Hugo -- gohugo.io</generator><language>ja</language><managingEditor>okdyy75@gmail.com (okdyy75)</managingEditor><webMaster>okdyy75@gmail.com (okdyy75)</webMaster><copyright>© 2021 okdyy75</copyright><lastBuildDate>Tue, 31 Aug 2021 20:24:38 +0900</lastBuildDate><atom:link href="https://hugo-theme-salt.okdyy75.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugoでついに外部URLのブログカードを作れるようになった【自作ショートコード】</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/blog-card/</link><pubDate>Fri, 06 May 2022 23:34:09 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/blog-card/</guid><description>Hugoでは外部サイトのデータを扱う場合、getJSONやgetCSVを使った方法しかありませんでしたが、ついにv0.91でGetRemoteが実装されました。 Release v0.91.0 · gohugoio/hugo Hugo 0.91.0 is mostly on the boring and technical side. See the list of changes below, but especially note the fix that allows passing falsy arguments to partials with the return keyword (5758c37 #... Hugo Pipes Introduction Hugo Pipes is Hugo's asset processing set of functions. GetRemoteの基本 基本の使い方はこんな感じで、html以外にも外部の画像、css、jsといったデータも取得できます。 {{ with resources.GetRemote &amp;#34;https://example.com&amp;#34; }} {{ .Content }} {{</description></item><item><title>Hugoでデプロイする時たまにビルドエラーになる原因</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/build-error/</link><pubDate>Sat, 29 Jan 2022 20:11:23 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/build-error/</guid><description>GitHub Actionsを使ったHugoのデプロイ時に、たまにエラーになっていたんですが原因が分かりました。 package.json &amp;#34;scripts&amp;#34;: { &amp;#34;create-ranking&amp;#34;: &amp;#34;node scripts/create-ranking.js&amp;#34;, &amp;#34;build&amp;#34;: &amp;#34;hugo --gc --minify&amp;#34;, &amp;#34;test&amp;#34;: &amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34; }, npm run buildしてみるとこんな感じのエラーが出て、たまにデプロイがうまくいきませんでした Start building sites … hugo v0.89.4-AB01BA6E darwin/amd64 BuildDate=2021-11-17T08:24:09Z VendorInfo=gohugoio ERROR 2022/01/29 20:21:30 render of &amp;#34;page&amp;#34; failed: execute of template failed: template: partials/sidebar.html:101:72: executing &amp;#34;sidebar&amp;#34; at &amp;lt;(index $thumbnail 0).Fill&amp;gt;: error calling Fill: image &amp;#34;/Users/okdyy75/hugo-theme-salt/content/article/hugo/fontawsome/thumbnail.png&amp;#34;: this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn for more information ERROR 2022/01/29 20:21:30 render of &amp;#34;page&amp;#34; failed: execute of template failed: template: partials/sidebar.html:101:72: executing &amp;#34;sidebar&amp;#34; at &amp;lt;(index $thumbnail 0).Fill&amp;gt;: error calling Fill: image &amp;#34;/Users/okdyy75/hugo-theme-salt/content/article/hugo/fontawsome/thumbnail.png&amp;#34;: this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn for more</description></item><item><title>Hugoで一週間のPV数順の人気記事を作る方法</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/ranking/</link><pubDate>Wed, 12 Jan 2022 15:34:42 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/ranking/</guid><description>HugoとGoogle Analyticsを使って人気記事のランキングを作る方法を紹介します ステップとしては GCPから鍵を作成し、Google Analyticsで権限を付与 Google Analytics Data APIからpv数を取得するスクリプトを作成 保存したpvデータを元にHugoからランキング作成 CIで定期的にpv取得スクリプトを起動させる 1. GCPから鍵を作成し、Google Analyticsで権限を付与 基本的にはdevelo</description></item><item><title>Hugoで年月別のアーカイブを作る方法</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/archive/</link><pubDate>Tue, 28 Dec 2021 10:32:02 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/archive/</guid><description>Hugoでアーカイブを作るには2種類ほど方法があります ①タグやカテゴリと同様にタクソノミーを設定する config.ymlにarchiveを追加し taxonomies: archive: archives 記事のフロントマターに年月を設定してあげれば archives: [&amp;#34;2021年12月&amp;#34;] こんな感じのデータが作成されます。この時「yyyy年mm月」の形式でないと年月でソートされないので注意です {{ .Site.Taxonomies.archives.Alphabetical.Reverse }} [ {2021年12月 [WeightedPage(0,</description></item><item><title>HugoでFontAwesomeを使う方法</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/fontawesome/</link><pubDate>Sat, 04 Dec 2021 10:11:36 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/fontawesome/</guid><description>HugoにFontAwesomeを使う場合はHugoの機能であるモジュールを使うと簡単に実現できます！ 1. npmでFontAwesomeをインストール package.jsonがない場合はnpm initしてください npm install -D @fortawesome/fontawesome-free 2. config.ymlのmoduleに使いたいjsファイルをmounts 注意点としてmountすると、デフォルトであるtargetのルートディレクトリが無視されるので明示的に追加する</description></item><item><title>Hugoに検索機能を追加しよう</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/search/</link><pubDate>Fri, 15 Oct 2021 21:35:10 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/search/</guid><description>このサイトにも実装されているんですが、Hugoにlunaを使った検索機能を実装する方法を紹介します。 基本的には公式で紹介されているgistを参考に実装します。（コメント下の方にvanilla js版を作ってくれた方がいました！感謝！） こちらのサイトも参考にさせて頂きました。 1. lunrのセットアップ npm install lunr lunr-languagesを実行してパッケージをインストールし、config.ymlに下記を追加</description></item><item><title>Hugoを使い始めた人に捧げるTips11選</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/tips/</link><pubDate>Thu, 16 Sep 2021 23:10:23 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/tips/</guid><description>1. とりあえずhugo server -Dって使ってるけどこれって何？ draft: trueのコンテンツファイルも含めて出力。 詳しくはhugo server --helpでチェック 2. taxonomyとtermの違い taxonomyは「タグ」や「カテゴリー」といった分類自体 termはそのタグやカテゴリーに属する「go」とか「tips」のことです こちらのサイトが非常に分かりやすいです！ https://maku77.github.io/hugo/taxonomy/basic.html 3. content配下の固定ページに共通のlayoutを使</description></item><item><title>Go言語Tips② Hugoで使われるlayoutの正体</title><link>https://hugo-theme-salt.okdyy75.com/article/go/go-template/</link><pubDate>Mon, 13 Sep 2021 11:59:12 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/go/go-template/</guid><description>Hugoで使われるlayoutですが実態はgo-templateという、いわゆるテンプレートエンジンです https://pkg.go.dev/text/template テンプレート内のハイフンありなしの違い たまにHugoテンプレート内で{{ .Title }}や{{- .Title -}}で書いてるものを見かけます この違いはハイフンを付けることで前後の空白を除去したい場合に使われます ちなみに公式ドキュメントにあります https://pkg.go.dev/text/template#hdr-Text_and_spaces 配列や連想配列の空チェック Hugoを使う際、空ではない文字列or配列</description></item><item><title>Go言語Tips① 変数について</title><link>https://hugo-theme-salt.okdyy75.com/article/go/variable/</link><pubDate>Mon, 13 Sep 2021 10:39:48 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/go/variable/</guid><description>変数定義 Hugoのテンプレート内で{{ $title := .Title }}や{{ $title = .Title }} のようにコロンをつけたり、付けなかったりする記述を見ます。 これはgo言語の書き方の特徴で、変数を定義する場合の省略記法です title := &amp;#34;タイトル&amp;#34; 省略しない場合はこうなります var title string = &amp;#34;タイトル&amp;#34; 変数のスコープ go言語の変数スコープはif、for、switchなどのブロック内で有効です if内などで新しく変数を定義す</description></item><item><title>Hugoでできること</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/about/</link><pubDate>Sun, 12 Sep 2021 17:43:50 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/about/</guid><description>最近はSSG（静的サイトジェネレータ）全盛期の時代で、サーバー代をかけずにブログが作れる時代になりました。 そこで実際にHugoを使ってこのブログを作ってみた所感とHugoでできることを紹介したいと思います ちなみにHugoとGatsbyどっちの方がいいの？ サイト内でリッチなグラフやテーブルを使ったり、動きのあるサイトを作りたい場合は、Gatsbyのほうが良いと思います。 というのもGatsbyの方がR</description></item><item><title>Hugoブログテーマ「Salt」とは？</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/about/</link><pubDate>Sun, 12 Sep 2021 15:07:11 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/about/</guid><description>「Salt」はシンプルなブログを低コストで作成できる を目標にしたHugo用テーマです。名前の通り、できるだけ素材そのものを引き出せるようなシンプルなデザイン・レイアウトにしました。 実際にSaltでできることについて紹介したいと思います 1. レスポンシブデザイン対応 PCとSP表示に対応しています。 デフォルトで横幅600pxをデフォルトにしていますが、任意のサイズに変更できます。 2. サイトカラーを自分の好き</description></item><item><title>サイト内ブログカードを作る自作ショートコード</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/self-blog-card/</link><pubDate>Sun, 12 Sep 2021 13:21:49 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/self-blog-card/</guid><description>このテーマ内でサイト内ブログカードを作れる「self-blog-card」というショートコードを作成しました。 使い方 自サイト内のurlを指定します 自記事のブログカードは表示できません。 日本語だとconfig.ymlのsummaryLength: 200以上推奨です {{&amp;lt; self-blog-card &amp;#34;/article/salt/custom-figure&amp;#34; &amp;gt;}} 表示例 画像のリサイズ・トリミング可能な自作ショートコード このテーマ内で画像のリサイズ・トリミングができる「custom-figur</description></item><item><title>画像のリサイズ・トリミング可能な自作ショートコード</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/custom-figure/</link><pubDate>Sat, 11 Sep 2021 23:39:15 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/custom-figure/</guid><description>このテーマ内で画像のリサイズ・トリミングができる「custom-figure」というショートコードを作成しました。 使い方 Hugo標準のfigureショートコードの機能をそのまま使えます HugoのImage Processingで使えるResize、Fit、Fillが使えます Image Processingについてはこちらをチェック https://gohugo.io/content-management/image-processing/ {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34; title=&amp;#34;Resize スイカ&amp;#34; Resize=&amp;#34;320x180&amp;#34; &amp;gt;}} {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34; title=&amp;#34;Fit スイカ&amp;#34; Fit=&amp;#34;320x180&amp;#34; &amp;gt;}} {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34; title=&amp;#34;Fill スイカ&amp;#34</description></item><item><title>Hugo標準のショートコード表示サンプル</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/hugo-shortcode/</link><pubDate>Sat, 11 Sep 2021 23:09:41 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/hugo-shortcode/</guid><description>Hugoで用意されているショートコード使用時の表示サンプルです figure スイカの画像 gist highlight &amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; {{ range .Pages }} {{ .Render &amp;#34;summary&amp;#34;}} {{ end }} &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; instagram Instagramのdeveloperアカウントが必要です。自前で用意する必要あり tweet Owl bet you&amp;#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC &amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 vimeo youtube</description></item><item><title>マークダウン表示サンプル</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/markdown/</link><pubDate>Sat, 11 Sep 2021 08:27:34 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/markdown/</guid><description>マークダウンで記事作成時の表示サンプルです Block Elements Headers 見出し 先頭に#をレベルの数だけ記述します。 # 見出し1 ## 見出し2 ### 見出し3 #### 見出し4 ##### 見出し5 ###### 見出し6 見出し1 見出し2 見出し3 見出し4 見出し5 見出し6 Block 段落 空白行を挟むことで段落となります。 段落1 (空行) 段落2 段落1 段落2 Br 改行 改行の前に半角スペース を2つ記述します。 hoge fuga(スペース2つ) piyo hoge fuga piyo Blockquotes 引用 先頭に&amp;gt;を記述します。ネストは&amp;gt;</description></item><item><title>小さいサムネイル記事</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/small-thumbnail/</link><pubDate>Fri, 10 Sep 2021 19:29:57 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/small-thumbnail/</guid><description>小さいサムネイルの場合の記事です 120x120です</description></item><item><title>タグとカテゴリーなしの記事</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/no-tag-category/</link><pubDate>Fri, 10 Sep 2021 18:45:23 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/no-tag-category/</guid><description>タグとカテゴリーが設定されていない場合の記事です</description></item><item><title>サムネイルなしの記事</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/no-thumbnail/</link><pubDate>Fri, 10 Sep 2021 18:17:52 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/no-thumbnail/</guid><description>サムネイルが設定されていない場合の記事です</description></item><item><title>お知らせ</title><link>https://hugo-theme-salt.okdyy75.com/information/</link><pubDate>Tue, 31 Aug 2021 22:31:13 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/information/</guid><description>2022年1月12日 ランキングを追加しました 2021年10月14日 検索機能を追加しました 2021年10月2日 アーカイブを追加しました 2021年8月31日 サイトを作成しました</description></item><item><title>プライバシーポリシー</title><link>https://hugo-theme-salt.okdyy75.com/privacy-policy/</link><pubDate>Tue, 31 Aug 2021 22:31:13 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/privacy-policy/</guid><description>このサイトはHugoブログテーマ「Salt」（以下、「当サイト」といいます。）は、本ウェブサイト上で提供するサービスにおけるユーザーの個人情報の取扱いについて、以下のとおりプライバシーポリシー（以下、「本ポリシー」といいます。）を定めます。 個人情報の利用目的 当サイトが個人情報を収集・利用する目的は、以下のとおりです。 当サイトサービスの提供・運営のため 不正・不当な目的でサービスを利用しようとするユー</description></item><item><title>このサイトについて</title><link>https://hugo-theme-salt.okdyy75.com/about/</link><pubDate>Tue, 31 Aug 2021 22:30:41 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/about/</guid><description>このサイトはシンプルなHugoブログテーマ「Salt」の紹介サイトです 「Salt」はシンプルなブログを低コストで作成できる を目標にしたHugo用テーマです。名前の通り、できるだけ素材そのものを引き出せるようなシンプルなデザイン・レイアウトにしました。</description></item></channel></rss>