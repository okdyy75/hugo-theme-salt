<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Hugoブログテーマ「Salt」</title><link>https://hugo-theme-salt.okdyy75.com/tags/Hugo/</link><description>Recent content in Hugo on Hugoブログテーマ「Salt」</description><generator>Hugo</generator><language>ja</language><managingEditor>okdyy75@gmail.com (okdyy75)</managingEditor><webMaster>okdyy75@gmail.com (okdyy75)</webMaster><copyright>© 2021 okdyy75</copyright><lastBuildDate>Wed, 10 Aug 2022 18:26:11 +0900</lastBuildDate><atom:link href="https://hugo-theme-salt.okdyy75.com/tags/Hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugoでついに外部URLのブログカードを作れるようになった【自作ショートコード】</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/blog-card/</link><pubDate>Fri, 06 May 2022 23:34:09 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/blog-card/</guid><description>Hugoでは外部サイトのデータを扱う場合、getJSONやgetCSVを使った方法しかありませんでしたが、ついにv0.91でGetRemoteが実装されました。 Release v0.91.0 · gohugoio/hugo Hugo 0.91.0 is mostly on the boring and technical side. See the list of changes below, but especially note the fix that allows passing falsy arguments to partials with the return keyword (5758c37 #... Hugo Pipes Hugo Pipes is Hugo's asset processing set of functions. GetRemoteの基本 基本の使い方はこんな感じで、html以外にも外部の画像、css、jsといったデータも取得できます。 {{ with resources.GetRemote &amp;#34;https://example.com&amp;#34; }} {{ .Content }} {{ end</description></item><item><title>Hugoを使い始めた人に捧げるTips11選</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/tips/</link><pubDate>Thu, 16 Sep 2021 23:10:23 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/tips/</guid><description>1. とりあえずhugo server -Dって使ってるけどこれって何？ draft: trueのコンテンツファイルも含めて出力。 詳しくはhugo server --helpでチェック 2. taxonomyとtermの違い taxonomyは「タグ」や「カテゴリー」といった分類自体 termはそのタグやカテゴリーに属する「go」とか「tips」のことです こちらのサイトが非常に分かりやすいです！ https://maku77.github.io/hugo/taxonomy/basic.html 3. content配下の固定ページに共通のlayoutを使</description></item><item><title>Go言語Tips② Hugoで使われるlayoutの正体</title><link>https://hugo-theme-salt.okdyy75.com/article/go/go-template/</link><pubDate>Mon, 13 Sep 2021 11:59:12 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/go/go-template/</guid><description>Hugoで使われるlayoutですが実態はgo-templateという、いわゆるテンプレートエンジンです https://pkg.go.dev/text/template テンプレート内のハイフンありなしの違い たまにHugoテンプレート内で{{ .Title }}や{{- .Title -}}で書いてるものを見かけます この違いはハイフンを付けることで前後の空白を除去したい場合に使われます ちなみに公式ドキュメントにあります https://pkg.go.dev/text/template#hdr-Text_and_spaces 配列や連想配列の空チェック Hugoを使う際、空ではない文字列or配列</description></item><item><title>Hugoでできること</title><link>https://hugo-theme-salt.okdyy75.com/article/hugo/about/</link><pubDate>Sun, 12 Sep 2021 17:43:50 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/hugo/about/</guid><description>最近はSSG（静的サイトジェネレータ）全盛期の時代で、サーバー代をかけずにブログが作れる時代になりました。 そこで実際にHugoを使ってこのブログを作ってみた所感とHugoでできることを紹介したいと思います ちなみにHugoとGatsbyどっちの方がいいの？ サイト内でリッチなグラフやテーブルを使ったり、動きのあるサイトを作りたい場合は、Gatsbyのほうが良いと思います。 というのもGatsbyの方がR</description></item><item><title>Hugoブログテーマ「Salt」とは？</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/about/</link><pubDate>Sun, 12 Sep 2021 15:07:11 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/about/</guid><description>「Salt」はシンプルなブログを低コストで作成できる を目標にしたHugo用テーマです。名前の通り、できるだけ素材そのものを引き出せるようなシンプルなデザイン・レイアウトにしました。 実際にSaltでできることについて紹介したいと思います 1. レスポンシブデザイン対応 PCとSP表示に対応しています。 デフォルトで横幅600pxをデフォルトにしていますが、任意のサイズに変更できます。 2. サイトカラーを自分の好き</description></item><item><title>サイト内ブログカードを作る自作ショートコード</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/self-blog-card/</link><pubDate>Sun, 12 Sep 2021 13:21:49 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/self-blog-card/</guid><description>このテーマ内でサイト内ブログカードを作れる「self-blog-card」というショートコードを作成しました。 使い方 自サイト内のurlを指定します 自記事のブログカードは表示できません。 日本語だとconfig.ymlのsummaryLength: 200以上推奨です {{&amp;lt; self-blog-card &amp;#34;/article/salt/custom-figure&amp;#34; &amp;gt;}} 表示例 画像のリサイズ・トリミング可能な自作ショートコード このテーマ内で画像のリサイズ・トリミングができる「custom-figur</description></item><item><title>画像のリサイズ・トリミング可能な自作ショートコード</title><link>https://hugo-theme-salt.okdyy75.com/article/salt/custom-figure/</link><pubDate>Sat, 11 Sep 2021 23:39:15 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/salt/custom-figure/</guid><description>このテーマ内で画像のリサイズ・トリミングができる「custom-figure」というショートコードを作成しました。 使い方 Hugo標準のfigureショートコードの機能をそのまま使えます HugoのImage Processingで使えるResize、Fit、Fillが使えます Image Processingについてはこちらをチェック Image processing Resize, crop, rotate, filter, and convert images. {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34; title=&amp;#34;Resize スイカ&amp;#34; Resize=&amp;#34;320x180&amp;#34; &amp;gt;}} {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34; title=&amp;#34;Fit スイカ&amp;#34; Fit=&amp;#34;320x180&amp;#34; &amp;gt;}} {{&amp;lt; custom-figure src=&amp;#34;image.png&amp;#34;</description></item><item><title>Hugo標準のショートコード表示サンプル</title><link>https://hugo-theme-salt.okdyy75.com/article/sample/hugo-shortcode/</link><pubDate>Sat, 11 Sep 2021 23:09:41 +0900</pubDate><author>okdyy75@gmail.com (okdyy75)</author><guid>https://hugo-theme-salt.okdyy75.com/article/sample/hugo-shortcode/</guid><description>Hugoで用意されているショートコード使用時の表示サンプルです figure スイカの画像 gist highlight &amp;lt;section id=&amp;#34;main&amp;#34;&amp;gt; &amp;lt;div&amp;gt; &amp;lt;h1 id=&amp;#34;title&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt; {{ range .Pages }} {{ .Render &amp;#34;summary&amp;#34;}} {{ end }} &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; instagram Instagramのdeveloperアカウントが必要です。自前で用意する必要あり tweet Owl bet you&amp;#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC &amp;mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 vimeo youtube</description></item></channel></rss>